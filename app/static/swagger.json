{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Flask API",
    "description": "API documentation for user registration, authentication, email sending, and paper submission"
  },
  "basePath": "/",
  "schemes": ["http"],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter 'Bearer' followed by a space and the JWT token."
    }
  },
  "paths": {
    "/auth/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Creates a new user in the system",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" },
                "first_name": { "type": "string" },
                "last_name": { "type": "string" },
                "phone_number": { "type": "string" },
                "role": { "type": "string" }
              },
              "required": ["email", "first_name", "last_name", "phone_number", "role"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Registration successful"
          },
          "400": {
            "description": "Invalid input or email already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User login",
        "description": "Login a user and return access/refresh tokens",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Login credentials",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string" },
                "password": { "type": "string" }
              },
              "required": ["username", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": { "type": "string" },
                "refresh_token": { "type": "string" }
              }
            }
          },
          "401": {
            "description": "Invalid username or password"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refresh access token",
        "description": "Get a new access token using a refresh token",
        "responses": {
          "200": {
            "description": "Access token refreshed"
          },
          "401": {
            "description": "Unauthorized, invalid refresh token"
          }
        }
      }
    },
    "/auth/logout": {
      "delete": {
        "summary": "Logout a user",
        "description": "Logs out the user and adds the JWT to the blacklist",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful"
          }
        }
      }
    },
    "/auth/user-details": {
      "get": {
        "summary": "Get user's details",
        "description": "Gets the details of a user connected to the access token",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "User details",
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" },
                "first_name": { "type": "string" },
                "last_name": { "type": "string" },
                "phone_number": { "type": "string" }
              }
            }
          },
          "404": {
            "description": "User doesn't exist"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "summary": "Forgot Password",
        "description": "Generates an OTP for resetting the password and sends it to the user's email",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User's email address",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" }
              },
              "required": ["email"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP sent to email"
          },
          "404": {
            "description": "User with this email does not exist"
          }
        }
      }
    },
    "/auth/verify-otp": {
      "post": {
        "summary": "Verify OTP",
        "description": "Verifies the OTP for password reset",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "User's email and OTP",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" },
                "otp": { "type": "string" }
              },
              "required": ["email", "otp"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OTP verified successfully"
          },
          "400": {
            "description": "Invalid or expired OTP"
          },
          "404": {
            "description": "User doesn't exist"
          }
        }
      }
    },
    "/auth/change-password": {
      "post": {
        "summary": "Change Password",
        "description": "Changes the user's password after OTP verification",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "New password data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "email": { "type": "string" },
                "new_password": { "type": "string" },
                "confirm_password": { "type": "string" }
              },
              "required": ["email", "new_password", "confirm_password"]
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": {
            "description": "Password changed successfully"
          },
          "400": {
            "description": "Passwords do not match"
          },
          "403": {
            "description": "Unauthorized for this operation"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/auth/send-email": {
      "post": {
        "summary": "Sending contact information via email",
        "description": "send information to email",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Send email",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "email": { "type": "string" },
                "message": { "type": "string" },
                "subject": { "type": "string" }
              },
              "required": ["name", "email", "message", "subject"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "email sent successful",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": { "type": "string" },
                "refresh_token": { "type": "string" }
              }
            }
          },
          "401": {
            "description": "email issue"
          }
        }
      }
    },
    "/author/submit-paper": {
            "post": {
                "summary": "Submit a paper",
                "description": "Allows authors to submit a paper with co-authors.",
                "security": [
          {
            "Bearer": []
          }
        ],
                "produces": ["application/json"],
                "consumes": ["multipart/form-data"],
                "tags": [
          "Papers"
        ],
                "parameters": [
                    {
                        "name": "title",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "The title of the paper."
                    },
                    {
                        "name": "theme",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "The theme of the paper."
                    },
                    {
                        "name": "subtheme",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "The subtheme of the paper."
                    },
                    {
                        "name": "abstract",
                        "in": "formData",
                        "required": true,
                        "type": "string",
                        "description": "Abstract of the paper."
                    },
                    {
                        "name": "coauthors",
                        "in": "formData",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "description": "Co-author's name."
                                },
                                "email": {
                                    "type": "string",
                                    "description": "Co-author's email."
                                }
                            }
                        },
                        "description": "List of co-authors."
                    },
                    {
                        "name": "file",
                        "in": "formData",
                        "required": true,
                        "type": "file",
                        "description": "The PDF file of the paper."
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Paper submitted successfully."
                    },
                    "400": {
                        "description": "Bad request, validation error."
                    },
                    "403": {
                        "description": "Unauthorized for this operation."
                    },
                    "404": {
                        "description": "User not found."
                    }
                }
            }
        },
    "/author/get-papers": {
      "get": {
        "summary": "Retrieve all papers submitted by the current user",
        "description": "Retrieves all papers submitted by the currently authenticated user based on their JWT token.",
        "tags": ["Papers"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of papers submitted by the user.",
            "schema": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "The paper's ID."
                  },
                  "title": {
                    "type": "string",
                    "description": "The paper's title."
                  },
                  "abstract": {
                    "type": "string",
                    "description": "The paper's abstract."
                  },
                  "file_url": {
                    "type": "string",
                    "description": "URL to access the paper file."
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, JWT required."
          },
          "404": {
            "description": "No papers found for the user."
          }
        }
      }
    },

    "/author/getPaper": {
      "get": {
        "summary": "Download a specific paper submitted by the user",
        "description": "Allows the currently authenticated user to download a specified paper file by providing the file path.",
        "tags": ["Papers"],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "file_path",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The path of the file to be downloaded."
          }
        ],
        "responses": {
          "200": {
            "description": "The requested file is sent for download."
          },
          "400": {
            "description": "File path not provided."
          },
          "401": {
            "description": "Unauthorized, JWT required."
          },
          "403": {
            "description": "User doesn't have access to this file."
          },
          "404": {
            "description": "File not found."
          },
          "500": {
            "description": "FTP download failed."
          }
        }
      }
    },
    "/payment/attendee-payment": {
  "post": {
    "summary": "Make a payment",
    "description": "Process payment for an attendee, including file upload and user registration.",
    "tags": [
      "Payment"
    ],
    "parameters": [
      {
        "in": "formData",
        "name": "email",
        "required": true,
        "type": "string",
        "description": "Email of the attendee."
      },
      {
        "in": "formData",
        "name": "first_name",
        "required": true,
        "type": "string",
        "description": "First name of the attendee."
      },
      {
        "in": "formData",
        "name": "last_name",
        "required": true,
        "type": "string",
        "description": "Last name of the attendee."
      },
      {
        "in": "formData",
        "name": "phone_number",
        "required": true,
        "type": "string",
        "description": "Phone number of the attendee."
      },
      {
        "in": "formData",
        "name": "role",
        "required": true,
        "type": "string",
        "description": "Role of the attendee."
      },
      {
        "in": "formData",
        "name": "file",
        "required": true,
        "type": "file",
        "description": "Payment confirmation file."
      }
    ],
    "responses": {
      "200": {
        "description": "Payment processed successfully, email confirmation sent."
      },
      "400": {
        "description": "Invalid payment details or user already exists."
      },
      "500": {
        "description": "FTP upload failed or server error."
      }
    }
  }
},
    "/author/delete-paper": {
      "delete": {
        "summary": "Delete a submitted paper",
        "description": "Deletes a paper submitted by the author",
        "tags": [
          "Papers"
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "parameters": [
          {
            "name": "paper_id",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "The ID of the paper to be deleted."
          }
        ],
        "responses": {
          "200": {
            "description": "Paper deleted successfully"
          },
          "404": {
            "description": "Paper not found"
          },
          "403": {
            "description": "Unauthorized for this operation"
          }
        }
      }
    },
    "/author/edit-paper/{paper-id}": {
        "put": {
            "summary": "Edit a paper",
            "description": "Allows authors to edit a previously submitted paper.",
            "security": [
                {
                    "Bearer": []
                }
            ],
            "produces": ["application/json"],
            "consumes": ["multipart/form-data"],
            "tags": [
                "Papers"
            ],
            "parameters": [
                {
                    "name": "paper_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "The ID of the paper to be edited."
                },
                {
                    "name": "title",
                    "in": "formData",
                    "required": false,
                    "type": "string",
                    "description": "The title of the paper."
                },
                {
                    "name": "theme",
                    "in": "formData",
                    "required": false,
                    "type": "string",
                    "description": "The theme of the paper."
                },
                {
                    "name": "subtheme",
                    "in": "formData",
                    "required": false,
                    "type": "string",
                    "description": "The subtheme of the paper."
                },
                {
                    "name": "abstract",
                    "in": "formData",
                    "required": false,
                    "type": "string",
                    "description": "Abstract of the paper."
                },
                {
                    "name": "coauthors",
                    "in": "formData",
                    "required": false,
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "Co-author's name."
                            },
                            "email": {
                                "type": "string",
                                "description": "Co-author's email."
                            }
                        }
                    },
                    "description": "List of co-authors."
                },
                {
                    "name": "file",
                    "in": "formData",
                    "required": false,
                    "type": "file",
                    "description": "The new PDF file of the paper."
                }
            ],
            "responses": {
                "200": {
                    "description": "Paper updated successfully."
                },
                "400": {
                    "description": "Bad request, validation error."
                },
                "403": {
                    "description": "Unauthorized for this operation."
                },
                "404": {
                    "description": "User or paper not found."
                },
                "500": {
                    "description": "Internal server error."
                }
            }
        }
    }
  }
}